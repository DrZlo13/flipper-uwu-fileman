{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/file-saver.js","../../src/generic-serial.js","../../src/TerminalEmu.svelte","../../src/FileTerminal.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","export default class GenericSerial {\r\n  constructor() {\r\n    this.filter_flipper = { usbVendorId: 1155, usbProductId: 22336 };\r\n    this.port = null;\r\n    this.connect_callback = null;\r\n    this.disconnect_callback = null;\r\n    this.reader = null;\r\n    this.writer = null;\r\n    this.read_buffer = new Uint8Array(0);\r\n\r\n    this.send_callback = null;\r\n    this.receive_callback = null;\r\n\r\n    if (this.is_supported()) {\r\n      let self = this;\r\n      navigator.serial.onconnect = () => {\r\n        self.on_connect();\r\n      };\r\n\r\n      navigator.serial.ondisconnect = () => {\r\n        self.on_disconnect();\r\n      };\r\n    }\r\n  }\r\n\r\n  is_supported() {\r\n    return \"serial\" in navigator;\r\n  }\r\n\r\n  async try_to_connect() {\r\n    if (this.is_supported()) {\r\n      let self = this;\r\n\r\n      await this.request_port().then(async (port) => {\r\n        if (port.length != 0) {\r\n          self.port = port;\r\n          self.port.onconnect = () => {\r\n            self.on_connect();\r\n          };\r\n          await self.connect();\r\n\r\n          if (this.connect_callback != null) {\r\n            this.connect_callback();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async connect() {\r\n    await this.port.open({ baudRate: 115200 });\r\n    this.reader = this.port.readable.getReader();\r\n    this.writer = this.port.writable.getWriter();\r\n  }\r\n\r\n  async disconnect() {\r\n    if (this.reader) {\r\n      this.reader.cancel().then(() => {\r\n        if (this.port) {\r\n          this.port.close();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async get_port() {\r\n    return await navigator.serial.getPorts({ filters: [this.filter_flipper] });\r\n  }\r\n\r\n  async request_port() {\r\n    return await navigator.serial.requestPort({\r\n      filters: [this.filter_flipper],\r\n    });\r\n  }\r\n\r\n  async on_connect() {\r\n    console.log(\"Serial connected\");\r\n    await this.get_port().then(async (ports) => {\r\n      if (ports !== null && Array.isArray(ports) && ports.length > 0) {\r\n        this.port = ports[0];\r\n        await this.connect();\r\n        if (this.connect_callback != null) {\r\n          this.connect_callback();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  on_disconnect() {\r\n    console.log(\"Serial disconnected\");\r\n    this.disconnect().then(() => {\r\n      this.port = null;\r\n      if (this.disconnect_callback != null) {\r\n        this.disconnect_callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  async send(data) {\r\n    let encoded_data = new TextEncoder().encode(data);\r\n    await this.send_raw(encoded_data);\r\n  }\r\n\r\n  async send_raw(data) {\r\n    if (this.send_callback != null) {\r\n      await this.send_callback(data);\r\n    }\r\n    await this.writer.write(data);\r\n  }\r\n\r\n  concatTypedArrays(a, b) {\r\n    var c = new a.constructor(a.length + b.length);\r\n    c.set(a, 0);\r\n    c.set(b, a.length);\r\n    return c;\r\n  }\r\n\r\n  async read_count(count) {\r\n    let data = new Uint8Array(count);\r\n    let finished = false;\r\n    let current_count = 0;\r\n\r\n    while (!finished) {\r\n      try {\r\n        while (!finished) {\r\n          const { value, done } = await this.reader.read();\r\n          if (done) {\r\n            break;\r\n          }\r\n          if (this.receive_callback != null) {\r\n            await this.receive_callback(value);\r\n          }\r\n\r\n          this.read_buffer = this.concatTypedArrays(this.read_buffer, value);\r\n\r\n          for (let i = 0; i < value.length; i++, current_count++) {\r\n            data[current_count] = value[i];\r\n            if (current_count >= count) {\r\n              finished = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        finished = true;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async read_until(eol = \"\\n\", cut_eol = true) {\r\n    let finished = false;\r\n    let data = new Uint8Array(0);\r\n    let encoded_eol = new TextEncoder().encode(eol);\r\n\r\n    while (!finished) {\r\n      try {\r\n        while (true) {\r\n          let i = this.read_buffer.findIndex((el, ind, arr) => {\r\n            let result = true;\r\n            for (let ei = 0; ei < encoded_eol.length; ei++) {\r\n              // TODO fix overflow\r\n              if (encoded_eol[ei] != arr[ind + ei]) {\r\n                result = false;\r\n                break;\r\n              }\r\n            }\r\n            return result;\r\n          });\r\n\r\n          if (i >= 0) {\r\n            finished = true;\r\n            //console.log(this.read_buffer);\r\n\r\n            if (!cut_eol) {\r\n              data = this.read_buffer.subarray(0, i + encoded_eol.length);\r\n            } else {\r\n              data = this.read_buffer.subarray(0, i);\r\n            }\r\n\r\n            this.read_buffer = this.read_buffer.subarray(\r\n              i + encoded_eol.length\r\n            );\r\n\r\n            //console.log(this.read_buffer);\r\n            break;\r\n          }\r\n\r\n          const { value, done } = await this.reader.read();\r\n          if (done) {\r\n            break;\r\n          }\r\n          if (this.receive_callback != null) {\r\n            await this.receive_callback(value);\r\n          }\r\n\r\n          this.read_buffer = this.concatTypedArrays(this.read_buffer, value);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        finished = true;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","<script>\r\n  import { afterUpdate } from \"svelte\";\r\n\r\n  let lines_container;\r\n  let lines = [];\r\n  let buffer = \"\";\r\n\r\n  export async function add_line(text) {\r\n    buffer = buffer + text;\r\n    buffer = buffer.split(\"\\n\");\r\n\r\n    if (lines.length > 100) {\r\n      lines.splice(0, lines.length - 100);\r\n    }\r\n\r\n    while (buffer.length > 1) {\r\n      let data = buffer.shift();\r\n      data = data.replaceAll(\"\\t\", \"&nbsp;&nbsp;\");\r\n      data = data.replaceAll(\" \", \"&nbsp;\");\r\n      lines = [...lines, data];\r\n    }\r\n\r\n    buffer = buffer.join(\"\");\r\n  }\r\n\r\n  afterUpdate(() => {\r\n    if (lines_container)\r\n      lines_container.scrollTo(0, lines_container.scrollHeight);\r\n  });\r\n</script>\r\n\r\n<div class=\"terminal\">\r\n  <div class=\"lines\" bind:this={lines_container}>\r\n    {#each lines as line}\r\n      <div class=\"line\">\r\n        {@html line}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .terminal {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    background-color: black;\r\n  }\r\n\r\n  .lines {\r\n    padding: 24px;\r\n    overflow-y: auto;\r\n    overflow-x: clip;\r\n  }\r\n\r\n  .line {\r\n    width: 100%;\r\n    white-space: nowrap;\r\n  }\r\n</style>\r\n","<script>\r\n  import { text } from \"svelte/internal\";\r\n  import { saveAs } from \"./file-saver.js\";\r\n  import GenericSerial from \"./generic-serial.js\";\r\n  import TerminalEmu from \"./TerminalEmu.svelte\";\r\n\r\n  let terminal;\r\n\r\n  let serial = new GenericSerial();\r\n  serial.connect_callback = connect_callback;\r\n  serial.disconnect_callback = disconnect_callback;\r\n  serial.send_callback = send_callback;\r\n  serial.receive_callback = receive_callback;\r\n\r\n  let connected = false;\r\n  let path = \"/\";\r\n\r\n  const type_enum = Object.freeze({ dir: 1, file: 2, error: 3 });\r\n  let files = [];\r\n\r\n  const mode_enum = Object.freeze({ load: 1, view: 2, delete: 3 });\r\n  let mode = mode_enum.load;\r\n\r\n  let progress = -1;\r\n\r\n  const CLI_PROMPT = \">: \";\r\n  const CLI_EOL = \"\\r\\n\";\r\n\r\n  function connect_callback() {\r\n    connected = true;\r\n    path = \"/\";\r\n\r\n    serial.send(\"device_info\\r\").then(() => {\r\n      serial.read_until(\"hardware_model\").then(() => {\r\n        serial.read_until(CLI_PROMPT).then(() => {\r\n          get_filelist();\r\n          connected = true;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  function disconnect_callback() {\r\n    connected = false;\r\n  }\r\n\r\n  function decode(data) {\r\n    return new TextDecoder().decode(data);\r\n  }\r\n\r\n  function send_callback(data) {}\r\n\r\n  function receive_callback(data) {\r\n    terminal.add_line(decode(data));\r\n  }\r\n\r\n  async function get_filelist() {\r\n    await serial.send('storage list \"' + path + '\"\\r');\r\n    await serial.read_until(CLI_EOL);\r\n\r\n    serial.read_until(CLI_PROMPT).then((data) => {\r\n      let lines = [];\r\n      let start = 0;\r\n      let stop = 0;\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        // TODO fix overflow\r\n        if (data[i] == 13 && data[i + 1] == 10) {\r\n          stop = i;\r\n          lines.push(data.slice(start, stop));\r\n          start = i + 2;\r\n        }\r\n      }\r\n\r\n      files = [];\r\n\r\n      lines.forEach(function (item) {\r\n        let text = \"\";\r\n        try {\r\n          text = decode(item);\r\n        } catch (error) {}\r\n        text = text.trim();\r\n        if (text.length > 0) {\r\n          if (text == \"Empty\") {\r\n            // nothing\r\n          } else {\r\n            text = text.split(\" \");\r\n            let type = type_enum.error;\r\n            let size = 0;\r\n            let name = \"\";\r\n\r\n            if (text[0] == \"[D]\") {\r\n              type = type_enum.dir;\r\n              text.shift();\r\n              name = text.join(\" \");\r\n              files.push({ type: type, name: name, size: size });\r\n            } else if (text[0] == \"[F]\") {\r\n              type = type_enum.file;\r\n              size = parseInt(text.at(-1).replace(\"b\", \"\"));\r\n              text.pop();\r\n              text.shift();\r\n              name = text.join(\" \");\r\n              files.push({ type: type, name: name, size: size });\r\n            } else {\r\n              name = text.join(\" \");\r\n              files.push({ type: type, name: name, size: size });\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      files.sort(function (a, b) {\r\n        if (a.type == type_enum.dir && b.type == type_enum.dir) {\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        } else if (a.type == type_enum.file && b.type == type_enum.file) {\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        } else {\r\n          if (a.type == type_enum.dir) {\r\n            return -1;\r\n          } else {\r\n            return 1;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async function connect() {\r\n    await serial.try_to_connect();\r\n  }\r\n\r\n  async function update_path(name) {\r\n    path += \"/\" + name;\r\n    path = path.replace(\"//\", \"/\");\r\n    get_filelist();\r\n  }\r\n\r\n  async function update_path_up() {\r\n    path = path.substring(0, path.lastIndexOf(\"/\"));\r\n    path = path.replace(\"//\", \"/\");\r\n    if (path.length == 0) path = \"/\";\r\n    get_filelist();\r\n  }\r\n\r\n  async function download(name) {\r\n    let filepath = path + \"/\" + name;\r\n    const buffer_size = 512;\r\n\r\n    progress = 0;\r\n\r\n    await serial.send(\r\n      'storage read_chunks \"' + filepath + '\" ' + buffer_size + \"\\r\"\r\n    );\r\n    await serial.read_until(CLI_EOL);\r\n\r\n    await serial.read_until(CLI_EOL).then(async (data) => {\r\n      data = decode(data);\r\n      let size = parseInt(data.split(\": \")[1]);\r\n      var file_data = new Uint8Array(size);\r\n      let readed_size = 0;\r\n\r\n      while (readed_size < size) {\r\n        await serial.read_until(\"Ready?\" + CLI_EOL);\r\n        await serial.send(\"y\");\r\n\r\n        let read_size = Math.min(size - readed_size, buffer_size);\r\n        await serial.read_count(read_size).then((buffer) => {\r\n          for (let i = 0; i < buffer.length; i++, readed_size++) {\r\n            file_data[readed_size] = buffer[i];\r\n          }\r\n        });\r\n        progress = Math.floor((readed_size / size) * 100);\r\n      }\r\n\r\n      if (mode == mode_enum.load) {\r\n        var file_blob = new Blob([file_data], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        saveAs(file_blob, name);\r\n      } else if (mode == mode_enum.view) {\r\n        console.log(decode(file_data));\r\n      }\r\n\r\n      await serial.read_until(CLI_PROMPT);\r\n      get_filelist();\r\n      progress = -1;\r\n    });\r\n  }\r\n\r\n  async function may_be_connected() {\r\n    await serial.on_connect();\r\n  }\r\n\r\n  may_be_connected();\r\n\r\n  async function handleFileSelect(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    var files = evt.dataTransfer.files; // FileList object.\r\n    var reader = new FileReader();\r\n\r\n    //for (var i = 0, f; (f = files[i]); i++) {\r\n    // TODO multiload\r\n    let f = files[0];\r\n    let name = f.name;\r\n    let size = f.size;\r\n\r\n    reader.readAsArrayBuffer(f);\r\n    reader.onload = async () => {\r\n      let data = new Uint8Array(reader.result);\r\n      console.log(name, size, data);\r\n      progress = 0;\r\n\r\n      await serial.send('storage remove \"' + path + \"/\" + name + '\"\\r');\r\n      await serial.read_until(CLI_EOL);\r\n      await serial.read_until(CLI_PROMPT);\r\n\r\n      const fpath = path + \"/\" + name;\r\n      const buffer_size = 512;\r\n      let sended_size = 0;\r\n      while (sended_size < data.length) {\r\n        let send_size = Math.min(data.length - sended_size, buffer_size);\r\n        let buffer = data.slice(sended_size, sended_size + send_size);\r\n        sended_size += send_size;\r\n\r\n        console.log(\"Sending \", sended_size, buffer, \" to \", fpath);\r\n        //terminal.add_line(\"[\" + decode(buffer) + \"]\");\r\n\r\n        await serial.send(\r\n          'storage write_chunk \"' + fpath + '\" ' + buffer.length + \"\\r\"\r\n        );\r\n        await serial.read_until(CLI_EOL);\r\n        await serial.read_until(CLI_EOL);\r\n        await serial.send_raw(buffer);\r\n        await serial.read_until(CLI_PROMPT);\r\n\r\n        progress = Math.floor((sended_size / size) * 100);\r\n      }\r\n\r\n      get_filelist();\r\n      progress = -1;\r\n    };\r\n    //}\r\n  }\r\n\r\n  function handleDragOver(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    evt.dataTransfer.dropEffect = \"copy\"; // Explicitly show this is a copy.\r\n  }\r\n\r\n  function switch_mode(new_mode) {\r\n    mode = new_mode;\r\n  }\r\n</script>\r\n\r\n<div class=\"screen\">\r\n  <div class=\"wrapper\">\r\n    {#if connected == false}\r\n      <div class=\"wrapper-button\">\r\n        <button on:click={connect}>Connect</button>\r\n      </div>\r\n    {:else}\r\n      <div\r\n        class=\"wrapper-list\"\r\n        on:dragover={handleDragOver}\r\n        on:drop={handleFileSelect}\r\n      >\r\n        <div class=\"border\" />\r\n        <div class=\"path\">{path}</div>\r\n        <div class=\"file-list\">\r\n          {#if path != \"\"}\r\n            <div class=\"file is-dir\" on:click={() => update_path_up()}>..</div>\r\n          {:else}\r\n            <div class=\"\">&nbsp;</div>\r\n          {/if}\r\n          {#each files as file}\r\n            {#if file.type == type_enum.dir}\r\n              <div class=\"file is-dir\" on:click={() => update_path(file.name)}>\r\n                {file.name}\r\n              </div>\r\n            {:else if file.type == type_enum.file}\r\n              <div class=\"file is-file\" on:click={() => download(file.name)}>\r\n                <div>{file.name}</div>\r\n                <div class=\"file-size\">{file.size}</div>\r\n              </div>\r\n            {:else}\r\n              <div class=\"file is-error\">\r\n                {file.name}\r\n              </div>\r\n            {/if}\r\n          {/each}\r\n        </div>\r\n        <div class=\"progress-bar-wrapper\">\r\n          {#if progress > -1}\r\n            <div class=\"progress-bar\" style=\"width: {progress}%;\">\r\n              {progress}%\r\n            </div>\r\n          {/if}\r\n        </div>\r\n        <div class=\"command-list\">\r\n          <div\r\n            class=\"command {mode == mode_enum.load ? 'active' : ''}\"\r\n            on:click={() => {\r\n              switch_mode(mode_enum.load);\r\n            }}\r\n          >\r\n            Load\r\n          </div>\r\n          <div\r\n            class=\"command {mode == mode_enum.view ? 'active' : ''}\"\r\n            on:click={() => {\r\n              switch_mode(mode_enum.view);\r\n            }}\r\n          >\r\n            View\r\n          </div>\r\n          <div\r\n            class=\"command {mode == mode_enum.delete ? 'active' : ''}\"\r\n            on:click={() => {\r\n              switch_mode(mode_enum.delete);\r\n            }}\r\n          >\r\n            Del\r\n          </div>\r\n          <div class=\"command\">MkDir</div>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <div class=\"wrapper\"><TerminalEmu bind:this={terminal} /></div>\r\n</div>\r\n\r\n<style>\r\n  button {\r\n    padding: 10px 10px;\r\n    color: #000000;\r\n    background: #bbbbbb;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    -webkit-box-shadow: 10px 10px 0 #000000;\r\n    -moz-box-shadow: 10px 10px 0 #000000;\r\n    box-shadow: 10px 10px 0 #000000;\r\n    border: 0;\r\n    border-radius: 0;\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  button:hover,\r\n  button:focus {\r\n    color: #ffffff;\r\n    text-decoration: none;\r\n    background: #555555;\r\n    outline: 0;\r\n  }\r\n\r\n  button:active {\r\n    transform: translate(10px, 10px);\r\n    box-shadow: 0px 0px 0 #000000;\r\n  }\r\n\r\n  button:before {\r\n    content: \"< \";\r\n  }\r\n  button:after {\r\n    content: \" >\";\r\n  }\r\n\r\n  .screen {\r\n    display: flex;\r\n    height: 100%;\r\n  }\r\n\r\n  .wrapper {\r\n    height: 100%;\r\n    position: relative;\r\n    width: 50%;\r\n  }\r\n\r\n  .wrapper-button {\r\n    display: flex;\r\n    align-content: center;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50%;\r\n  }\r\n\r\n  .wrapper-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    height: 100%;\r\n  }\r\n\r\n  .border {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 48px);\r\n    height: calc(100% - 48px);\r\n    border: 4px dashed #ffffff;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .file-list {\r\n    width: calc(100% - 48px);\r\n    margin: 28px 24px;\r\n  }\r\n\r\n  .path {\r\n    background-color: #007f80;\r\n    color: #000000;\r\n    text-align: center;\r\n    padding: 0 24px;\r\n    top: 0;\r\n    position: absolute;\r\n  }\r\n\r\n  .file {\r\n    padding: 0 24px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .file:hover {\r\n    background-color: #007f80;\r\n  }\r\n\r\n  .file.is-file {\r\n    color: #00cbd6;\r\n  }\r\n\r\n  .file.is-error {\r\n    color: red;\r\n    background-color: black;\r\n  }\r\n\r\n  .progress-bar {\r\n    text-align: center;\r\n    margin: auto;\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n\r\n  .progress-bar-wrapper {\r\n    margin-top: auto;\r\n    margin-bottom: 12px;\r\n    width: calc(100% - 24px);\r\n  }\r\n\r\n  .command-list {\r\n    margin-bottom: 24px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: calc(100% - 24px);\r\n    flex-wrap: wrap;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  .command {\r\n    padding: 0 12px;\r\n    margin-right: 12px;\r\n    background-color: #000000;\r\n  }\r\n  .command.active {\r\n    background-color: #007f80;\r\n  }\r\n  .command:before {\r\n    content: \"< \";\r\n  }\r\n  .command:after {\r\n    content: \" >\";\r\n  }\r\n  .command:hover {\r\n    background-color: #f4ff00;\r\n    color: #000000;\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","HtmlTag","[object Object]","this","e","n","html","nodeName","t","h","innerHTML","Array","from","childNodes","current_component","set_current_component","component","afterUpdate","Error","get_current_component","$$","after_update","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","transition_in","block","local","delete","transition_out","o","outros","c","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","_global","window","self","global","download","url","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","status","click","dispatchEvent","MouseEvent","evt","createEvent","initMouseEvent","isMacOSWebView","navigator","test","userAgent","HTMLAnchorElement","prototype","blob","URL","webkitURL","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","Blob","String","fromCharCode","bom","popup","title","body","innerText","force","isSafari","HTMLElement","safari","isChromeIOS","FileReader","reader","onloadend","result","replace","readAsDataURL","module","GenericSerial","filter_flipper","usbVendorId","usbProductId","port","connect_callback","disconnect_callback","writer","read_buffer","Uint8Array","send_callback","receive_callback","is_supported","serial","onconnect","on_connect","ondisconnect","request_port","async","connect","baudRate","readable","getReader","writable","getWriter","cancel","close","getPorts","filters","requestPort","log","get_port","ports","isArray","disconnect","encoded_data","TextEncoder","encode","send_raw","write","constructor","set","count","finished","current_count","done","read","concatTypedArrays","eol","cut_eol","encoded_eol","findIndex","el","ind","arr","ei","subarray","lines_container","lines","buffer","scrollTo","scrollHeight","split","shift","replaceAll","join","load","view","handleDragOver","size","dir","file","CLI_PROMPT","CLI_EOL","decode","TextDecoder","stopPropagation","preventDefault","dataTransfer","dropEffect","terminal","connected","path","read_until","get_filelist","add_line","type_enum","freeze","files","mode_enum","mode","progress","start","stop","slice","item","trim","parseInt","at","sort","update_path","update_path_up","substring","lastIndexOf","filepath","file_data","readed_size","read_size","Math","min","read_count","floor","file_blob","switch_mode","new_mode","may_be_connected","try_to_connect","f","readAsArrayBuffer","fpath","sended_size","send_size"],"mappings":"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"}